{
    "whitesheet": {
        "biography": {
            "body": "Hello there! My name is Araam Zaremehrjardi and I enjoy all things technology and made it a part of both my passion and career. I am currently an undergraduate student at the University of Nevada, Reno studying Computer Science and Engineering. My focuses are the development of data pipelines, full-stack development, and embedded programming. When I am not studying technologies, you can find me hiking the Sierra's nearby Lake Tahoe or enjoying a cup of coffee in Reno's Midtown."
        },
        "education": [
            {
                "institution": "University of Nevada, Reno",
                "degree": "B.S. in Computer Science and Engineering",
                "start_year": 2018,
                "end_year": 2023
            }
        ],
        "experience": [
            {
                "title": "CS 425 Grader",
                "description": "Worked as a grader for the senior capstone course assisting the teaching team by grading and evaluating senior project capstones. Graded project assignments ensuring students' project ideas were evaluated for completeness and fair contributions by all team members. Graded student's prototype applications with the teaching team ensuring student's met certain performance critera depending if the application was embeeded, web-application, or game application.",
                "start_year": 2022,
                "takeaways": [
                    "Evaluated students' capstone demonstrations and assigned appropriate scores based on certain performance criteria.",
                    "Graded student project assignments that would become design documents ensuring they contributed equally planning and implementation of their application."
                ]
            },
            {
                "title": "NCAR Undergraduate Research Assistant",
                "description": "Currently working as an undergraduate researcher at the Nevada Center of Applied Research (NCAR) in the planning and implementation of a data pipeline to be used for both live LiDAR and archived LiDAR data. My duties include overall analysis of different methodologies and technologies to achieve a performant and scalable data pipeline to be used by both internal applications and external applications. Planning of the data pipeline included working with a graduate supervisor and database architect to develop a schema based upon the shape of data incoming from both live LiDAR feeds and stored LiDAR data from a database. Attended meetings with stakeholders such as the Washoe Regional Transport Commission (RTC) and NCAR to ensure the pipeline had met all parties' requirements for the development applications on-top of the pipeline.",
                "start_year": 2022,
                "takeaways": [
                    "Used MQTT as a base protocol for the transfer of LiDAR data between street-side lights that record point clouds of intersection across Virginia Street.",
                    "Used gRPC as a protocol to facilitate the transfer of previously stored LiDAR to internal and external applications.",
                    "Used React with Three.js to develop an internal application that uses the gRPC-based data pipeline to visualize saved point clouds of intersections on Virginia Street."
                ]
            },
            {
                "title": "ENGR 100 Teaching Assistant",
                "description": "Worked as a teaching assistant for the introductory engineering course at the university. I mentored students through a variety of labs designed to engage students in different engineering disciplines and thus discover what engineering field students would like to study. I would assist students in completiton of labs and grade their performance of their completed labs and homework assigned to them. My duties passed mentoring and grading were to up keep the lab in assisting other mentors in either organizing lab materials before they began or answer questions by students that come during lab hours for help.",
                "start_year": 2019,
                "end_year": 2022,
                "takeaways": [
                    "Facilitated problem-solving skills among students to complete labs.",
                    "Encouraged collaboration among student groups and engaged in discussing solutions to the given task with students.",
                    "Graded student's performance on weekly basis based on submitted lab and homework assignments."
                ]
            }
        ],
        "skills": [
            {
                "label": "Languages",
                "technolgoies": [
                    {
                        "technology": "Python",
                        "level": 1,
                        "takeaways": [
                            "Used Python to implement the following design patterns: Adapter, Command, Decorator, Strategy, State, Singleton.",
                            "Used Python to create scripts to help assist in reading large datasets and analysis.",
                            "Used Python for the development of APIs using frameworks such as Flask and SocketIO."
                        ]
                    },
                    {
                        "technology": "Java",
                        "level": 1,
                        "takeaways": [
                            "Used Java to create client-side interactive applications using Swing and design patterns.",
                            "Used Java to implement the following design patterns: Adapter, Command, Composite, Decorator, Observer, MVC, Strategy, State, and Singleton.",
                            "Fetching"
                        ]
                    },
                    {
                        "technology": "C/C++",
                        "level": 0,
                        "takeaways": [
                            "Can effectively use C/C++ for manipulation of microcontroller registers to achieve desired device functionality. "
                        ]
                    },
                    {
                        "technology": "TypeScript",
                        "level": 0,
                        "takeaways": [
                            "Used in React-based projects to ensure the proper shape of data for both objects and props.",
                            "Used in React-based projects to ensure proper typing support for data items in projects.",
                            "Used to properly define interface types to be used for both ensuring shape of data and typing support in Visual Studio Code."
                        ]
                    }
                ]
            },
            {
                "label": "Frontend",
                "technolgoies": [
                    {
                        "technology": "React JavaScript Library",
                        "level": 1,
                        "takeaways": [
                            "Familiar with React's use of composition, hook methodology, and prop use for development of components.",
                            "Familiar with React's Context API for advanced state management in React applications.",
                            "Familiar with popular React Frameworks such as React Router to create large-scale applications."
                        ]
                    },
                    {
                        "technology": "Vue.js",
                        "level": 0,
                        "takeaways": [
                            "Familiar with Vue.js Options API to create components in Vue applications.",
                            "Familiar with Vue.js core features such life cycle functions, props, events, and directives to to create functionality in applications."
                        ]
                    }
                ]
            },
            {
                "label": "Backend",
                "technolgoies": [
                    {
                        "technology": "Flask",
                        "level": 1,
                        "takeaways": [
                            "Used Flask for creation of backend and backend APIs to be used by applications.",
                            "Familiar with Flask Blueprints to create encapsulated CRUD functionality for different resources.",
                            "Familiar with basic CRUD methodology and its implementation in Flask."
                        ]
                    }
                ]
            },
            {
                "label": "Embedded",
                "technolgoies": [
                    {
                        "technology": "Arduino UNO",
                        "level": 1,
                        "takeaways": [
                            "Familiar with basic use of UNO's subset of features such as Serial Communication, Interrupts, and EEPROM-based data storage.",
                            "Used UNO in conjunction with another microcontroller to send live peripheral data to other microcontroller via UARTs. ",
                            "Used Interrupt handling from the UNO to read peripheral data such as photoresistor and PIR motion sensors."
                        ]
                    },
                    {
                        "technology": "Espressif ESP32-C3",
                        "level": 0,
                        "takeaways": [
                            "Used TCP Communication with Espressif MQTT Client Library to communicate between the microcontroller and a Flask-based backend.",
                            "Used Serial Communication with other microcontrollers to facilitate control over another microcontroller.",
                            "Familiar with use ESP-IDF and the ESP32-C3 toolchain to create embedded applications in C/C++."
                        ]
                    }
                ]
            },
            {
                "label": "Networking",
                "technolgoies": [
                    {
                        "technology": "gRPC",
                        "level": 1,
                        "takeaways": [
                            "Familiar with either the Flatbuffer or Protocol Buffer compiler to generate client and server stubs for gRPC development.",
                            "Familiar with creation of Flatbuffer or Protocol Buffer schemas to create the shape of a gRPC-based pipeline.",
                            "Familiar with use of gRPC client and server stubs in C++ and Python."
                        ]
                    },
                    {
                        "technology": "MQTT",
                        "level": 0,
                        "takeaways": [
                            "Familiar with the general Publisher and Subscribe model of MQTT-based communication pipelines.",
                            "Familiar with use of MQTT Clients in Python using the Eclipse Paho Client Library."
                        ]
                    }
                ]
            }
        ]
    }
}